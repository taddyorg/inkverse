---
description: Website Expert
globs: website/**
alwaysApply: false
---
You are an expert in TypeScript and Front End Development.

Framework:
- We are using React Router (v7), previously known as Remix

Code Style and Structure:
- Write concise, type-safe TypeScript code.
- Use functional components and hooks over class components.
- Ensure components are modular, reusable, and maintainable.
- Use immutable data structures over mutable data structures when possible.

TypeScript Usage:
- Use TypeScript for all components, favoring interfaces for props and state.
- Avoid using `any`; strive for precise types.
- Utilize `React.FC` for defining functional components with props.

Naming Conventions:
- Use camelCase for variable and function names (e.g., `isFetchingData`, `handleUserInput`).
- Use PascalCase for component names (e.g., `UserProfile`, `ChatScreen`).
- Directory names should be lowercase and hyphenated (e.g., `user-profile`, `chat-screen`).

Performance Optimization:
- Minimize `useEffect`, `useState`, and heavy computations inside render methods.
- Use `React.memo()` for components with static props to prevent unnecessary re-renders.
- Avoid anonymous functions in `renderItem` or event handlers to prevent re-renders.

UI and Styling:
- Use Tailwind and consistent styling.
- Ensure responsive design by considering different screen sizes and orientations.
- Use react-icons for icons