---
description: Visual process map for BUILD mode (Code Implementation)
globs: implementation-mode-map.mdc
alwaysApply: false
---
# BUILD MODE: CODE EXECUTION PROCESS MAP

> **TL;DR:** This visual map guides the BUILD mode process, focusing on efficient code implementation across multiple applications in the Inkverse monorepo, based on the planning and creative phases, with proper command execution and progress tracking.

## üß≠ BUILD MODE PROCESS FLOW

```mermaid
graph TD
    Start["START BUILD MODE"] --> ReadDocs["Read Reference Documents<br>Core/command-execution.md"]
    
    %% Initialization
    ReadDocs --> CheckLevel{"Determine<br>Complexity Level<br>from tasks.md"}
    
    %% Application Selection
    CheckLevel --> SelectApp["Select Target<br>Application"]
    SelectApp --> AppType{"Application<br>Type?"}
    
    AppType -->|"Website"| WebsiteImpl["Website<br>Implementation"]
    AppType -->|"React Native"| MobileImpl["Mobile App<br>Implementation"]
    AppType -->|"GraphQL Server"| GraphQLImpl["GraphQL Server<br>Implementation"]
    AppType -->|"Worker"| WorkerImpl["Worker<br>Implementation"]
    AppType -->|"Cross-App"| CrossImpl["Cross-App<br>Implementation"]
    
    %% Level 1 Implementation
    WebsiteImpl & MobileImpl & GraphQLImpl & WorkerImpl & CrossImpl -->|"Level 1<br>Quick Bug Fix"| L1Process["LEVEL 1 PROCESS<br>Level1/quick-bug-workflow.md"]
    L1Process --> L1Review["Review Bug<br>Report"]
    L1Review --> L1Examine["Examine<br>Relevant Code"]
    L1Examine --> L1Fix["Implement<br>Targeted Fix"]
    L1Fix --> L1Test["Test<br>Fix"]
    L1Test --> L1Update["Update<br>tasks.md"]
    
    %% Level 2 Implementation
    WebsiteImpl & MobileImpl & GraphQLImpl & WorkerImpl & CrossImpl -->|"Level 2<br>Simple Enhancement"| L2Process["LEVEL 2 PROCESS<br>Level2/enhancement-workflow.md"]
    L2Process --> L2Review["Review Build<br>Plan"]
    L2Review --> L2Examine["Examine Relevant<br>Code Areas"]
    L2Examine --> L2Implement["Implement Changes<br>Sequentially"]
    L2Implement --> L2Test["Test<br>Changes"]
    L2Test --> L2Update["Update<br>tasks.md"]
    
    %% Level 3-4 Implementation
    WebsiteImpl & MobileImpl & GraphQLImpl & WorkerImpl & CrossImpl -->|"Level 3-4<br>Feature/System"| L34Process["LEVEL 3-4 PROCESS<br>Level3/feature-workflow.md<br>Level4/system-workflow.md"]
    L34Process --> L34Review["Review Plan &<br>Creative Decisions"]
    L34Review --> L34Phase{"Creative Phase<br>Documents<br>Complete?"}
    
    L34Phase -->|"No"| L34Error["ERROR:<br>Return to CREATIVE Mode"]
    L34Phase -->|"Yes"| L34DirSetup["Create Directory<br>Structure"]
    L34DirSetup --> L34VerifyDirs["VERIFY Directories<br>Created Successfully"]
    L34VerifyDirs --> L34Implementation["Build<br>Phase"]
    
    %% Implementation Phases
    L34Implementation --> L34Phase1["Phase 1<br>Build"]
    L34Phase1 --> L34VerifyFiles["VERIFY Files<br>Created Successfully"]
    L34VerifyFiles --> L34Test1["Test<br>Phase 1"]
    L34Test1 --> L34Document1["Document<br>Phase 1"]
    L34Document1 --> L34Next1{"Next<br>Phase?"}
    L34Next1 -->|"Yes"| L34Implementation
    
    L34Next1 -->|"No"| L34Integration["Integration<br>Testing"]
    L34Integration --> L34Document["Document<br>Integration Points"]
    L34Document --> L34Update["Update<br>tasks.md"]
    
    %% Command Execution
    L1Fix & L2Implement & L34Phase1 --> CommandExec["COMMAND EXECUTION<br>Core/command-execution.md"]
    CommandExec --> DocCommands["Document Commands<br>& Results"]
    
    %% Completion & Transition
    L1Update & L2Update & L34Update --> VerifyComplete["Verify Build<br>Complete"]
    VerifyComplete --> UpdateProgress["Update progress.md<br>with Status"]
    UpdateProgress --> Transition["NEXT MODE:<br>REFLECT MODE"]
```

## üìã APPLICATION-SPECIFIC BUILD COMMANDS

```mermaid
graph TD
    subgraph "Application Build Commands"
        Website["Website<br>(React)"]
        Mobile["Mobile App<br>(React Native)"]
        GraphQL["GraphQL Server<br>(Node.js)"]
        Worker["Worker<br>(Node.js)"]
    end
    
    Website -->|"Setup"| WebSetup["cd website && yarn"]
    Website -->|"Dev"| WebDev["cd website && yarn dev"]
    Website -->|"Build"| WebBuild["cd website && yarn build"]
    Website -->|"Test"| WebTest["cd website && yarn typecheck"]
    
    Mobile -->|"Setup"| MobileSetup["cd react-native && yarn"]
    Mobile -->|"Dev"| MobileDev["cd react-native && yarn start"]
    Mobile -->|"Build"| MobileBuild["cd react-native && yarn build"]
    Mobile -->|"Test"| MobileTest["cd react-native && yarn test"]
    
    GraphQL -->|"Setup"| GraphQLSetup["cd graphql-server && yarn"]
    GraphQL -->|"Dev"| GraphQLDev["cd graphql-server && yarn dev"]
    GraphQL -->|"Build"| GraphQLBuild["cd graphql-server && yarn build"]
    
    Worker -->|"Setup"| WorkerSetup["cd worker && yarn"]
    Worker -->|"Build"| WorkerBuild["cd worker && yarn build"]
    Worker -->|"Scripts"| WorkerScripts["cd worker && yarn [script-name]"]
```

## üìã REQUIRED FILE STATE VERIFICATION

Before implementation can begin, verify file state:

```mermaid
graph TD
    Start["File State<br>Verification"] --> CheckTasks{"tasks.md has<br>planning complete?"}
    
    CheckTasks -->|"No"| ErrorPlan["ERROR:<br>Return to PLAN Mode"]
    CheckTasks -->|"Yes"| CheckLevel{"Task<br>Complexity?"}
    
    CheckLevel -->|"Level 1"| L1Ready["Ready for<br>Implementation"]
    
    CheckLevel -->|"Level 2"| L2Ready["Ready for<br>Implementation"]
    
    CheckLevel -->|"Level 3-4"| CheckCreative{"Creative phases<br>required?"}
    
    CheckCreative -->|"No"| L34Ready["Ready for<br>Implementation"]
    CheckCreative -->|"Yes"| VerifyCreative{"Creative phases<br>completed?"}
    
    VerifyCreative -->|"No"| ErrorCreative["ERROR:<br>Return to CREATIVE Mode"]
    VerifyCreative -->|"Yes"| AppVerification["Verify Target<br>Application"]
    
    AppVerification -->|"Verified"| L34Ready
```

## üîÑ FILE SYSTEM VERIFICATION PROCESS

```mermaid
graph TD
    Start["Start File<br>Verification"] --> TargetApp["Identify Target<br>Application"]
    TargetApp --> AppPath["Determine Correct<br>Application Path"]
    AppPath --> CheckDir["Check Directory<br>Structure"]
    CheckDir --> DirResult{"Directories<br>Exist?"}
    
    DirResult -->|"No"| ErrorDir["‚ùå ERROR:<br>Missing Directories"]
    DirResult -->|"Yes"| CheckFiles["Check Each<br>Created File"]
    
    ErrorDir --> FixDir["Fix Directory<br>Structure"]
    FixDir --> CheckDir
    
    CheckFiles --> FileResult{"All Files<br>Exist?"}
    FileResult -->|"No"| ErrorFile["‚ùå ERROR:<br>Missing/Wrong Path Files"]
    FileResult -->|"Yes"| Complete["‚úÖ Verification<br>Complete"]
    
    ErrorFile --> FixFile["Fix File Paths<br>or Recreate Files"]
    FixFile --> CheckFiles
```

## üìã DIRECTORY VERIFICATION STEPS

Before beginning any file creation:

```
‚úì DIRECTORY VERIFICATION PROCEDURE
1. Identify target application in the monorepo:
   - website/
   - react-native/
   - graphql-server/
   - worker/
2. Create all directories first before any files
3. Use ABSOLUTE paths: /full/path/to/application/directory
4. Verify each directory after creation:
   ls -la /full/path/to/application/directory     # Linux/Mac
   dir "C:\full\path\to\application\directory"    # Windows
5. Document directory structure in progress.md
6. Only proceed to file creation AFTER verifying ALL directories exist
```

## üìã FILE CREATION VERIFICATION

After creating files:

```
‚úì FILE VERIFICATION PROCEDURE
1. Use ABSOLUTE paths for all file operations: /full/path/to/application/file.ext
2. Verify each file creation was successful:
   ls -la /full/path/to/application/file.ext     # Linux/Mac
   dir "C:\full\path\to\application\file.ext"    # Windows 
3. If verification fails:
   a. Check for path resolution issues
   b. Verify directory exists
   c. Try creating with corrected path
   d. Recheck file exists after correction
4. Document all file paths in progress.md
```

## üîÑ COMMAND EXECUTION WORKFLOW

```mermaid
graph TD
    Start["Command<br>Execution"] --> AppSelect["Select Target<br>Application"]
    AppSelect --> NavApp["Navigate to<br>Application Directory"]
    NavApp --> Analyze["Analyze Command<br>Requirements"]
    Analyze --> Complexity{"Command<br>Complexity?"}
    
    Complexity -->|"Simple"| Simple["Execute<br>Single Command"]
    Complexity -->|"Moderate"| Chain["Use Efficient<br>Command Chaining"]
    Complexity -->|"Complex"| Break["Break Into<br>Logical Steps"]
    
    Simple & Chain & Break --> Verify["Verify<br>Results"]
    Verify --> Document["Document<br>Command & Result"]
    Document --> Next["Next<br>Command"]
```

## üìã APPLICATION-SPECIFIC BUILD APPROACHES

```mermaid
graph TD
    subgraph "Website (React)"
        W1["Component<br>Development"]
        W2["Route<br>Configuration"]
        W3["API<br>Integration"]
        W4["UI/UX<br>Implementation"]
    end
    
    subgraph "Mobile App (React Native)"
        RN1["Screen<br>Development"]
        RN2["Navigation<br>Setup"]
        RN3["API<br>Integration"]
        RN4["Native<br>Functionality"]
    end
    
    subgraph "GraphQL Server"
        GQL1["Schema<br>Definition"]
        GQL2["Resolver<br>Implementation"]
        GQL3["Data Source<br>Integration"]
        GQL4["Authentication<br>& Authorization"]
    end
    
    subgraph "Worker"
        WK1["Job<br>Creation"]
        WK2["Queue<br>Setup"]
        WK3["Event<br>Handling"]
        WK4["Notification<br>Services"]
    end
    
    W1 --> W2 --> W3 --> W4
    RN1 --> RN2 --> RN3 --> RN4
    GQL1 --> GQL2 --> GQL3 --> GQL4
    WK1 --> WK2 --> WK3 --> WK4
```

## üìù BUILD DOCUMENTATION FORMAT

Document builds with:

```
## Build: [Component/Feature]

### Target Application
[Specify which application in the monorepo]

### Approach
[Brief description of build approach]

### Directory Structure
- [/absolute/path/to/application/dir1/]: [Purpose]
- [/absolute/path/to/application/dir2/]: [Purpose]

### Code Changes
- [/absolute/path/to/application/file1.ext]: [Description of changes]
- [/absolute/path/to/application/file2.ext]: [Description of changes]

### Verification Steps
- [‚úì] Target application identified
- [‚úì] Directory structure created and verified
- [‚úì] All files created in correct locations
- [‚úì] File content verified

### Commands Executed
```
[Command 1]
[Result]
```

```
[Command 2]
[Result]
```

### Testing
- [Test 1]: [Result]
- [Test 2]: [Result]

### Status
- [x] Build complete
- [x] Testing performed
- [x] File verification completed
- [ ] Documentation updated
```

## üìä TASKS.MD UPDATE FORMAT

During the build process, update tasks.md with progress:

```
## Status
- [x] Initialization complete
- [x] Planning complete
[For Level 3-4:]
- [x] Creative phases complete
- [x] Target application identified: [Website/Mobile/GraphQL Server/Worker/Cross-App]
- [x] Directory structure created and verified
- [x] [Built component 1]
- [x] [Built component 2]
- [ ] [Remaining component]

## Build Progress
- [Component 1]: Complete
```

## üìã PROGRESS.MD UPDATE FORMAT

Update progress.md with:

```
# Build Progress

## Directory Structure
- [/absolute/path/to/dir1/]: Created and verified
- [/absolute/path/to/dir2/]: Created and verified

## [Date]: [Component/Feature] Built
- **Files Created**: 
  - [/absolute/path/to/file1.ext]: Verified
  - [/absolute/path/to/file2.ext]: Verified
- **Key Changes**: 
  - [Change 1]
  - [Change 2]
- **Testing**: [Test results]
- **Next Steps**: [What comes next]
```

## üìä BUILD VERIFICATION CHECKLIST

```
‚úì BUILD VERIFICATION
- Directory structure created correctly? [YES/NO]
- All files created in correct locations? [YES/NO]
- All file paths verified with absolute paths? [YES/NO]
- All planned changes implemented? [YES/NO]
- Testing performed for all changes? [YES/NO]
- Code follows project standards? [YES/NO]
- Edge cases handled appropriately? [YES/NO]
- Build documented with absolute paths? [YES/NO]
- tasks.md updated with progress? [YES/NO]
- progress.md updated with details? [YES/NO]

‚Üí If all YES: Build complete - ready for REFLECT mode
‚Üí If any NO: Complete missing build elements
```

## üîÑ MODE TRANSITION NOTIFICATION

When the build is complete, notify user with:

```
## BUILD COMPLETE

‚úÖ Directory structure verified
‚úÖ All files created in correct locations
‚úÖ All planned changes implemented
‚úÖ Testing performed successfully
‚úÖ tasks.md updated with status
‚úÖ progress.md updated with details

‚Üí NEXT RECOMMENDED MODE: REFLECT MODE
``` 